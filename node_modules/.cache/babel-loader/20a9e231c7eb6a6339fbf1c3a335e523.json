{"ast":null,"code":"/* import { bindActionCreators } from \"redux\";\n\nconst intialState = {\n    cartItems:[],\n    OrderC:[]\n}\n\nconst cartReducer = (state = intialState,action) => \n{\n    switch(action.type)\n    {\n        case 'ADD_ALL_ITEMS':\n        return {\n            ...state,\n            cartItems: action.payload\n        }\n        case 'ADD_NEW_ORDER':\n            return {\n            cartItems: [\n                ...state.cart,\n                {\n                    id: state.cartItems,\n                    NumberOfItems:state.cartItems+1\n                }\n\n            ]}\n            case 'RM_ORDER':\n                return {\n                cartItems: [\n                    ...state.cart,\n                    {\n                        id: state.cartItems,\n                        NumberOfItems:state.cartItems-1\n                    }\n    \n                ]}    \n        case 'ADD_NEW_ORDER_CONF':\n            return {\n                OrderC: [\n                    ...state.cart,\n                    {\n                        OrderNr: state.order,\n                        eta:state.eta\n                    }\n                ]} \n        default:\n            return state;\n    }\n}\n\nexport default cartReducer; */\nimport { bindActionCreators } from \"redux\";\nconst intialState = {\n  todos: []\n};\n\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_ALL_TODOS':\n      return { ...state,\n        todos: action.payload\n      };\n\n    case 'ADD_NEW_TODO':\n      return {\n        todos: [...state.todos, {\n          task: action.payload,\n          id: state.todos.length + 1\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/christof/react-yh/modul-7-slutexamination/src/reducers/cartReducer.js"],"names":["bindActionCreators","intialState","todos","cartReducer","state","action","type","payload","task","id","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAT,QAAmC,OAAnC;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAC;AADU,CAApB;;AAIA,MAAMC,WAAW,GAAG,YACpB;AAAA,MADqBC,KACrB,uEAD6BH,WAC7B;AAAA,MADyCI,MACzC;;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,eAAL;AACA,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFX,OAAP;;AAIA,SAAK,cAAL;AACI,aAAO;AACPL,QAAAA,KAAK,EAAE,CACH,GAAGE,KAAK,CAACF,KADN,EAEH;AACIM,UAAAA,IAAI,EAAEH,MAAM,CAACE,OADjB;AAEIE,UAAAA,EAAE,EAAEL,KAAK,CAACF,KAAN,CAAYQ,MAAZ,GAAmB;AAF3B,SAFG;AADA,OAAP;;AASJ;AACI,aAAON,KAAP;AAlBR;AAoBH,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["/* import { bindActionCreators } from \"redux\";\n\nconst intialState = {\n    cartItems:[],\n    OrderC:[]\n}\n\nconst cartReducer = (state = intialState,action) => \n{\n    switch(action.type)\n    {\n        case 'ADD_ALL_ITEMS':\n        return {\n            ...state,\n            cartItems: action.payload\n        }\n        case 'ADD_NEW_ORDER':\n            return {\n            cartItems: [\n                ...state.cart,\n                {\n                    id: state.cartItems,\n                    NumberOfItems:state.cartItems+1\n                }\n\n            ]}\n            case 'RM_ORDER':\n                return {\n                cartItems: [\n                    ...state.cart,\n                    {\n                        id: state.cartItems,\n                        NumberOfItems:state.cartItems-1\n                    }\n    \n                ]}    \n        case 'ADD_NEW_ORDER_CONF':\n            return {\n                OrderC: [\n                    ...state.cart,\n                    {\n                        OrderNr: state.order,\n                        eta:state.eta\n                    }\n                ]} \n        default:\n            return state;\n    }\n}\n\nexport default cartReducer; */\nimport { bindActionCreators } from \"redux\"\n\nconst intialState = {\n    todos:[]\n}\n\nconst cartReducer = (state = intialState,action) => \n{\n    switch(action.type)\n    {\n        case 'ADD_ALL_TODOS':\n        return {\n            ...state,\n            todos: action.payload\n        }\n        case 'ADD_NEW_TODO':\n            return {\n            todos: [\n                ...state.todos,\n                {\n                    task: action.payload,\n                    id: state.todos.length+1\n                }\n\n            ]}\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}