'use strict'

const path = require('path')
const autoprefixer = require('autoprefixer')
const webpack = require('webpack')

const paths = {
  output: __dirname + '/build',
  src: __dirname + '/src',
  nodeModules: 'node_modules',
  entry: './src/index.js',
  filename: 'index.js',
}

const env = null

module.exports = {
  devtool: 'eval-source-map',
  entry: paths.entry,
  output: {
    path: paths.output,
    filename: paths.filename,
    library: 'redux-provider',
    libraryTarget: 'umd',
    chunkFilename: '[name].bundle.js',
  },
  resolve: {
    extensions: ['.js', '.json']
  },
  module: {
    // noParse: [/node_modules\/object-hash\/dist\/object_hash\.js/],
    rules: [
      {
        exclude: [
          /\.html$/,
          /\.(js)(\?.*)?$/,
          /\.css$/,
          /\.json$/,
          /\.svg$/,
          /\.less$/,
        ],
        use: [
          {
            loader: 'url-loader',
            options: {
              limit: 10000,
              fallback: 'file-loader',
              name: '/static/media/[name].[hash:8].[ext]',
            },
          },
        ],
      },
      {
        test: /\.(js)$/,
        include: paths.src,
        exclude: /node_modules/,
        use: [
          {
            loader: 'babel-loader',
            options: {
              cacheDirectory: true,
              presets: ['@babel/flow', '@babel/react', "@babel/env"],
              plugins: ['lodash', '@babel/plugin-proposal-class-properties'],
            },
          },
        ],
      },
      {
        test: /\.json$/,
        use: [{ loader: 'json-loader' }],
      },
    ],
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin(),
  ],
  node: {
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
  },
}
