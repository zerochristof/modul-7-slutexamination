import {
  flow,
  get,
  identity,
  isUndefined,
  isPlainObject,
  isString,
  mapValues,
  nthArg,
  partial,
  property,
} from 'lodash'

import { handleAction } from 'redux-actions'

export function handleActions(initialState, handlers) {
  if (isUndefined(initialState)) {
    throw new Error(
      `handleActions: initialState must not be ${typeof initialState}`,
    )
  }

  if (!isPlainObject(handlers)) {
    throw new Error(
      `handleActions: handlers must be valid type, got ${typeof handlers}`,
    )
  }

  const reducers = mapValues(handlers, (handler, actionType) =>
    handleAction(actionType, handler, null),
  )

  return (state = initialState, action) =>
    reducers.hasOwnProperty(action.type)
      ? reducers[action.type](state, action)
      : state
}

export const handleActionsForPointerStore = partial(handleActions, null)

export const createStoreReducer = (name) => ({
  next: flow(
    nthArg(1),
    property('payload.states'),
    (response) =>
      isString(name)
        ? get(response, name, null)
        : isString(response)
          ? response
          : null,
  ),
  throw: identity,
})
